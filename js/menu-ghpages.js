document.addEventListener('DOMContentLoaded', async () => {
  const menuList = document.getElementById('menu-list');

  // === üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ JSONBin ===
  const JSONBIN_ID = '68fb613843b1c97be97d0e0e'; // –≤—Å—Ç–∞–≤—å —Å—é–¥–∞ ID bin
  const JSONBIN_KEY = '$2a$10$iWaW8ZYQnb2ifBzumJgsVeUvO2gpzQ7cKnt0rm.BmMu8JKpy4aN7m'; // –≤—Å—Ç–∞–≤—å —Å—é–¥–∞ API –∫–ª—é—á

  async function loadMenu() {
    try {
      const res = await fetch(`https://api.jsonbin.io/v3/b/${JSONBIN_ID}/latest?nocache=${Date.now()}`, {
        headers: { 'X-Master-Key': JSONBIN_KEY }
      });
      if (!res.ok) throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ JSONBin: ' + res.status);
      const data = await res.json();
      return data.record;
    } catch (e) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–Ω—é —Å JSONBin:', e);
      return {
        "–ö–æ–∫—Ç–µ–π–ª–∏": [
          { "name": "–ú–æ—Ö–∏—Ç–æ", "price": "500‚ÇΩ", "active": true },
          { "name": "–ü–∏–Ω–∞ –ö–æ–ª–∞–¥–∞", "price": "550‚ÇΩ", "active": true }
        ]
      };
    }
  }

  function escapeHtml(s) {
    return (s + '').replace(/[&<>"']/g, c => ({
      '&': '&amp;', '<': '&lt;', '>': '&gt;', '"': '&quot;', "'": '&#39;'
    }[c]));
  }

  function renderMenu(menuData) {
    menuList.innerHTML = '';
    Object.entries(menuData).forEach(([catName, items]) => {
      const catEl = document.createElement('div');
      catEl.className = 'category card';
      const visibleCount = items.filter(i => i.active).length;
      catEl.innerHTML = `
        <div class="cat-head">
          <div>
            <div class="cat-title">${escapeHtml(catName)}</div>
            <div class="cat-badge">${visibleCount} –ø–æ–∑–∏—Ü–∏–π</div>
          </div>
          <div class="chev">‚ñ∏</div>
        </div>
        <div class="items">
          ${items.map(i => i.active ? `
            <div class="item">
              <div class="name">${escapeHtml(i.name)}</div>
              <div class="price">${escapeHtml(i.price)}</div>
            </div>` : '').join('')}
        </div>
      `;
      const head = catEl.querySelector('.cat-head');
      const itemsDiv = catEl.querySelector('.items');
      head.addEventListener('click', () => {
        const open = itemsDiv.classList.contains('open');
        if (open) {
          itemsDiv.classList.remove('open');
          itemsDiv.style.maxHeight = '0';
        } else {
          itemsDiv.classList.add('open');
          itemsDiv.style.maxHeight = itemsDiv.scrollHeight + 'px';
        }
      });
      menuList.appendChild(catEl);
    });
  }

  const menuData = await loadMenu();
  renderMenu(menuData);
});
